package view;

import control.GerenciadorDeInterface;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import model.Cliente;
import model.Item_Venda;
import model.Produto;
import model.Venda;
import org.hibernate.HibernateException;

/**
 *
 * @author wanes
 */
public class Dlg_Menu extends javax.swing.JDialog {
    
    private Dlg_Listar_Clientes dlg_cliente = null;
    private Dlg_Listar_Produtos dlg_produtos = null;
    private GerenciadorDeInterface inter;  
    private Venda vendaAtual = null;
    
    public Dlg_Menu(java.awt.Frame parent, boolean modal, GerenciadorDeInterface inter) {
        super(parent, modal);
        initComponents();
        this.inter = inter;
        this.dlg_cliente = new Dlg_Listar_Clientes(parent, modal, inter);
        this.dlg_produtos = new Dlg_Listar_Produtos(parent, modal, inter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpanMenu = new javax.swing.JTabbedPane();
        panClientes = new javax.swing.JPanel();
        btAdicionarCliente = new javax.swing.JButton();
        btCancelarCliente = new javax.swing.JButton();
        btListarCliente = new javax.swing.JButton();
        fieldNomeCliente = new javax.swing.JTextField();
        labNomeCliente = new javax.swing.JLabel();
        formatTelefoneCliente = new javax.swing.JFormattedTextField();
        labTelefoneCliente = new javax.swing.JLabel();
        labCpfCliente = new javax.swing.JLabel();
        formatCpfCliente = new javax.swing.JFormattedTextField();
        labCadastroCliente = new javax.swing.JLabel();
        panProduto = new javax.swing.JTabbedPane();
        panCadastrarProduto = new javax.swing.JPanel();
        btListarProduto = new javax.swing.JButton();
        btAdicionarProduto = new javax.swing.JButton();
        cbUnidadeMedidaProduto = new javax.swing.JComboBox<>();
        formatTamProduto = new javax.swing.JFormattedTextField();
        labTamProduto = new javax.swing.JLabel();
        fieldNomeProduto = new javax.swing.JTextField();
        labNomeProduto = new javax.swing.JLabel();
        labQtEstoqueProduto = new javax.swing.JLabel();
        formatQtProduto = new javax.swing.JFormattedTextField();
        formatPrecoProduto = new javax.swing.JFormattedTextField();
        labPrecoProduto = new javax.swing.JLabel();
        cbCategoriaProduto = new javax.swing.JComboBox<>();
        btCancelarProduto = new javax.swing.JButton();
        labCadastrarProduto = new javax.swing.JLabel();
        panControleEstoque = new javax.swing.JPanel();
        btAdicionarEstoque = new javax.swing.JButton();
        labQtEstoque = new javax.swing.JLabel();
        btCancelarEstoque = new javax.swing.JButton();
        labNomeEstoque = new javax.swing.JLabel();
        fieldNomeEstoque = new javax.swing.JTextField();
        btBuscarEstoque = new javax.swing.JButton();
        labAdicionarEstoque = new javax.swing.JLabel();
        fieldQtEstoque = new javax.swing.JFormattedTextField();
        panVenda = new javax.swing.JPanel();
        labTotalCarrinhoVenda = new javax.swing.JLabel();
        formatTotalCarrinhoVenda = new javax.swing.JFormattedTextField();
        labNomeCarrinho = new javax.swing.JLabel();
        fieldNomeCarrinho = new javax.swing.JTextField();
        scrolpanCarrinho = new javax.swing.JScrollPane();
        tableCarrinho = new javax.swing.JTable();
        labQtCarrinho = new javax.swing.JLabel();
        formatQtCarrinho = new javax.swing.JFormattedTextField();
        btBuscarCarrinho = new javax.swing.JToggleButton();
        btAdicionarCarrinho = new javax.swing.JButton();
        btFinalizarCarrinho = new javax.swing.JButton();
        btCancelarCarrinho = new javax.swing.JButton();
        cbCliente = new javax.swing.JComboBox<>();
        labCarrinho1 = new javax.swing.JLabel();
        btEncerrar = new javax.swing.JToggleButton();
        labImagemFundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tpanMenu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tpanMenu.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N

        panClientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btAdicionarCliente.setText("Adicionar");
        btAdicionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarClienteActionPerformed(evt);
            }
        });
        panClientes.add(btAdicionarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 100, 30));

        btCancelarCliente.setText("Cancelar");
        btCancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarClienteActionPerformed(evt);
            }
        });
        panClientes.add(btCancelarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 210, 90, 30));

        btListarCliente.setText("Listar");
        btListarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListarClienteActionPerformed(evt);
            }
        });
        panClientes.add(btListarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 100, 30));
        panClientes.add(fieldNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 280, 30));

        labNomeCliente.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labNomeCliente.setText("Nome:");
        panClientes.add(labNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, 30));

        try {
            formatTelefoneCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatTelefoneCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatTelefoneClienteActionPerformed(evt);
            }
        });
        panClientes.add(formatTelefoneCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 100, 30));

        labTelefoneCliente.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labTelefoneCliente.setText("Telefone:");
        panClientes.add(labTelefoneCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, 30));

        labCpfCliente.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labCpfCliente.setText("CPF:");
        panClientes.add(labCpfCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, 30));

        try {
            formatCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatCpfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatCpfClienteActionPerformed(evt);
            }
        });
        panClientes.add(formatCpfCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, 100, 30));

        labCadastroCliente.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        labCadastroCliente.setText("CADASTRO CLIENTE");
        panClientes.add(labCadastroCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, -1));

        tpanMenu.addTab("Clientes", panClientes);

        panProduto.setForeground(new java.awt.Color(102, 51, 0));
        panProduto.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        panProduto.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N

        panCadastrarProduto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btListarProduto.setText("Listar");
        btListarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListarProdutoActionPerformed(evt);
            }
        });
        panCadastrarProduto.add(btListarProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 90, 30));

        btAdicionarProduto.setText("Adicionar");
        btAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarProdutoActionPerformed(evt);
            }
        });
        panCadastrarProduto.add(btAdicionarProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, 90, 30));

        cbUnidadeMedidaProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unid Medida", "g", "kg", "ml", " " }));
        panCadastrarProduto.add(cbUnidadeMedidaProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 110, 30));

        formatTamProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        panCadastrarProduto.add(formatTamProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 60, 30));

        labTamProduto.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labTamProduto.setText("Tam/Pes:");
        panCadastrarProduto.add(labTamProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, -1, 30));
        panCadastrarProduto.add(fieldNomeProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 150, 30));

        labNomeProduto.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labNomeProduto.setText("Nome:");
        panCadastrarProduto.add(labNomeProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, 30));

        labQtEstoqueProduto.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labQtEstoqueProduto.setText("Qt. estoque:");
        panCadastrarProduto.add(labQtEstoqueProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, 30));

        formatQtProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        formatQtProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatQtProdutoActionPerformed(evt);
            }
        });
        panCadastrarProduto.add(formatQtProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 60, 30));

        formatPrecoProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        panCadastrarProduto.add(formatPrecoProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 60, 30));

        labPrecoProduto.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labPrecoProduto.setText("Preço Unit:");
        panCadastrarProduto.add(labPrecoProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, 30));

        cbCategoriaProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Categoria", "Café", "Chá", "Bebida", "Salgado", "Bolo", "Pão", " ", " " }));
        panCadastrarProduto.add(cbCategoriaProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, 90, 30));

        btCancelarProduto.setText("Cancelar");
        btCancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarProdutoActionPerformed(evt);
            }
        });
        panCadastrarProduto.add(btCancelarProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 90, 30));

        labCadastrarProduto.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        labCadastrarProduto.setText("CADASTRO PRODUTO");
        panCadastrarProduto.add(labCadastrarProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        panProduto.addTab("Cadastrar Produtos", panCadastrarProduto);

        panControleEstoque.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btAdicionarEstoque.setText("Adicionar");
        btAdicionarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarEstoqueActionPerformed(evt);
            }
        });
        panControleEstoque.add(btAdicionarEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 90, 30));

        labQtEstoque.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labQtEstoque.setText("Adicionar Quantidade:");
        panControleEstoque.add(labQtEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, -1, 30));

        btCancelarEstoque.setText("Cancelar");
        btCancelarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarEstoqueActionPerformed(evt);
            }
        });
        panControleEstoque.add(btCancelarEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 90, 30));

        labNomeEstoque.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labNomeEstoque.setText("Produto:");
        panControleEstoque.add(labNomeEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, 30));

        fieldNomeEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNomeEstoqueActionPerformed(evt);
            }
        });
        panControleEstoque.add(fieldNomeEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 170, 30));

        btBuscarEstoque.setText("Buscar");
        btBuscarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarEstoqueActionPerformed(evt);
            }
        });
        panControleEstoque.add(btBuscarEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 80, 30));

        labAdicionarEstoque.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        labAdicionarEstoque.setText("ADICIONAR ESTOQUE");
        panControleEstoque.add(labAdicionarEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        fieldQtEstoque.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fieldQtEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldQtEstoqueActionPerformed(evt);
            }
        });
        panControleEstoque.add(fieldQtEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 80, 30));

        panProduto.addTab("Controle de Estoque", panControleEstoque);

        tpanMenu.addTab("Produtos", panProduto);

        panVenda.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labTotalCarrinhoVenda.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labTotalCarrinhoVenda.setText("TOTAL:");
        panVenda.add(labTotalCarrinhoVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, -1, 30));

        formatTotalCarrinhoVenda.setBorder(null);
        formatTotalCarrinhoVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        formatTotalCarrinhoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatTotalCarrinhoVendaActionPerformed(evt);
            }
        });
        panVenda.add(formatTotalCarrinhoVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 260, 70, 30));

        labNomeCarrinho.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labNomeCarrinho.setText("Adicionar Produto:");
        panVenda.add(labNomeCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, 30));

        fieldNomeCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNomeCarrinhoActionPerformed(evt);
            }
        });
        panVenda.add(fieldNomeCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 150, 30));

        tableCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Qt", "Preco"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrolpanCarrinho.setViewportView(tableCarrinho);

        panVenda.add(scrolpanCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 610, 110));

        labQtCarrinho.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        labQtCarrinho.setText("Quantidade:");
        panVenda.add(labQtCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 98, -1, 30));

        formatQtCarrinho.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0%"))));
        panVenda.add(formatQtCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 50, 30));

        btBuscarCarrinho.setText("Buscar");
        btBuscarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarCarrinhoActionPerformed(evt);
            }
        });
        panVenda.add(btBuscarCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 80, 30));

        btAdicionarCarrinho.setText("Adicionar");
        btAdicionarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarCarrinhoActionPerformed(evt);
            }
        });
        panVenda.add(btAdicionarCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 90, 30));

        btFinalizarCarrinho.setText("Finalizar");
        btFinalizarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarCarrinhoActionPerformed(evt);
            }
        });
        panVenda.add(btFinalizarCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 100, 30));

        btCancelarCarrinho.setText("Cancelar");
        btCancelarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarCarrinhoActionPerformed(evt);
            }
        });
        panVenda.add(btCancelarCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 100, 30));

        cbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClienteActionPerformed(evt);
            }
        });
        panVenda.add(cbCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, 190, 30));

        labCarrinho1.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        labCarrinho1.setText("CARRINHO");
        panVenda.add(labCarrinho1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        tpanMenu.addTab("Vendas", panVenda);

        getContentPane().add(tpanMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 650, 340));

        btEncerrar.setBackground(new java.awt.Color(204, 204, 204));
        btEncerrar.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        btEncerrar.setText("SAIR");
        btEncerrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btEncerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btEncerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btEncerrarMouseClicked(evt);
            }
        });
        btEncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEncerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btEncerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 60, 40));

        labImagemFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imagem-fundo-2.png"))); // NOI18N
        getContentPane().add(labImagemFundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEncerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btEncerrarActionPerformed

    private void btEncerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btEncerrarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btEncerrarMouseClicked

    private void btAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarProdutoActionPerformed

        if(validarCamposProduto()){
            String nome = fieldNomeProduto.getText(),
            unidMedida = (String) cbUnidadeMedidaProduto.getSelectedItem(),
            categoria = (String) cbCategoriaProduto.getSelectedItem();
            double valor = Double.parseDouble(formatPrecoProduto.getText().replace(',', '.'));
            int estoque = Integer.parseInt(formatQtProduto.getText());
            double tam_pes = Double.parseDouble(formatTamProduto.getText().replace(',', '.'));

            try {
                List<Object> produtoExistente = GerenciadorDeInterface.getInstance().getDominio().pesquisarProduto(nome, 1);
                if (produtoExistente != null && !produtoExistente.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Produto com o nome " + nome + " já existe.", "ERRO: Adicionar Produto", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try{
                Produto produto = GerenciadorDeInterface.getInstance().getDominio().inserirProduto(nome, valor, tam_pes, unidMedida, categoria, estoque);
                JOptionPane.showMessageDialog(this, "Produto " + produto.getIdProduto() + " inserido com sucesso.", "Cadastro Produto", JOptionPane.INFORMATION_MESSAGE);                
            }catch(HibernateException ex){
                JOptionPane.showMessageDialog(this, "Erro nos dados: " + ex.getMessage(), "ERRO: Cadastro Produto", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btAdicionarProdutoActionPerformed

    private void btListarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListarProdutoActionPerformed
        this.setVisible(false);
        try {
            inter.abrirJanelaDlg_Listar_Produtos();
        } catch (NoSuchMethodException ex) {
            Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btListarProdutoActionPerformed

    private void btCancelarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarEstoqueActionPerformed

    }//GEN-LAST:event_btCancelarEstoqueActionPerformed

    private void btAdicionarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarEstoqueActionPerformed

    if (fieldNomeEstoque.getText().isEmpty() || fieldQtEstoque.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha todos os campos", "ERRO: Adicionar Estoque", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int estoque = Integer.parseInt(fieldQtEstoque.getText());
        System.out.println(estoque);
        List<Object> produtos = GerenciadorDeInterface.getInstance().getDominio().pesquisarProduto(fieldNomeEstoque.getText(), 1);

        if (produtos != null && !produtos.isEmpty()) {
            Produto produto = (Produto) produtos.get(0);
            if (produto != null) {
                try {
                    GerenciadorDeInterface.getInstance().getDominio().alterarQuantidadeProduto(produto, estoque);
                    JOptionPane.showMessageDialog(this, "Estoque adicionado!", "Adicionar Estoque", JOptionPane.INFORMATION_MESSAGE);
                } catch (HibernateException ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao atualizar o estoque: " + ex.getMessage(), "ERRO: Adicionar Estoque", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Produto " + fieldNomeEstoque.getText() + " não encontrado", "ERRO: Adicionar Estoque", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Produto " + fieldNomeEstoque.getText() + " não encontrado", "ERRO: Adicionar Estoque", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Quantidade: " + fieldQtEstoque.getText() + " inválida.", "ERRO: Adicionar Estoque", JOptionPane.ERROR_MESSAGE);
    }   catch (SQLException ex) {
            Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btAdicionarEstoqueActionPerformed

    private void formatTelefoneClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatTelefoneClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatTelefoneClienteActionPerformed

    private void formatCpfClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatCpfClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatCpfClienteActionPerformed

    private void btListarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListarClienteActionPerformed
        
        this.setVisible(false);
        try {
            inter.abrirJanelaDlg_Listar_Clientes();
        } catch (NoSuchMethodException ex) {
            Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btListarClienteActionPerformed

    private void btCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarClienteActionPerformed
        limparCamposCliente();
    }//GEN-LAST:event_btCancelarClienteActionPerformed

    private void btAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarClienteActionPerformed

        if(validarCamposCliente()){
            String nome = fieldNomeCliente.getText();
            String cpf = formatCpfCliente.getText();
            String tel = formatTelefoneCliente.getText();
            
            if(!validarCpfUnico(cpf)){
                formatCpfCliente.setText("");
                return;
            }                
            
            try{
                Cliente cliente = GerenciadorDeInterface.getInstance().getDominio().inserirCliente(nome, cpf, tel);
                JOptionPane.showMessageDialog(this, "Cliente " + cliente.getIdCliente() + " inserido com sucesso.", "Cadastro Cliente", JOptionPane.INFORMATION_MESSAGE);
                limparCamposCliente();
            }catch(HibernateException ex){
                JOptionPane.showMessageDialog(this, "Erro nos dados: " + ex.getMessage(), "ERRO Cadastro Cliente", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btAdicionarClienteActionPerformed

    private void btCancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarProdutoActionPerformed
        limparCamposProduto();
    }//GEN-LAST:event_btCancelarProdutoActionPerformed

    private void fieldNomeEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNomeEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNomeEstoqueActionPerformed

    private void btBuscarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarEstoqueActionPerformed






        
    }//GEN-LAST:event_btBuscarEstoqueActionPerformed

    private void btBuscarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarCarrinhoActionPerformed
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_btBuscarCarrinhoActionPerformed

    private void btCancelarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarCarrinhoActionPerformed
        if (!validarTabelaVenda()) {
            JOptionPane.showMessageDialog(this, "Não há produtos no carrinho.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja limpar o carrinho?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                limparTabelaVenda();
            }
        }
    }//GEN-LAST:event_btCancelarCarrinhoActionPerformed

    private void btFinalizarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarCarrinhoActionPerformed
        if(validarTabelaVenda()){
            if(vendaAtual != null){
                try{
                    GerenciadorDeInterface.getInstance().getDominio().inserirVendas(vendaAtual.getTotalVenda(),vendaAtual.getCliente());
                    for(int i = 0; i < tableCarrinho.getRowCount(); i++){
                        Produto produto = (Produto) tableCarrinho.getValueAt(i,0);
                        int quantidade = (int) tableCarrinho.getValueAt(i, 1);
                        double preco = (double) tableCarrinho.getValueAt(i, 2);
                        double desconto = (double) tableCarrinho.getValueAt(i, 3);
                        
                        Item_Venda item_venda = new Item_Venda(produto, vendaAtual, quantidade, desconto);
                        GerenciadorDeInterface.getInstance().getDominio().inserirItemVenda(produto, vendaAtual, quantidade, preco, desconto);
                    }
                }catch (HibernateException ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao finalizar venda: " + ex.getMessage(), "ERRO: Finalizar Venda", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Não há venda para ser finalizada.", "Erro: Finalizar Venda", JOptionPane.ERROR_MESSAGE);
            }            
            JOptionPane.showMessageDialog(this, "Carrinho finalizado com sucesso!", "Finalizar Carrinho", JOptionPane.INFORMATION_MESSAGE);
            limparTabelaVenda();
        }else{
            JOptionPane.showMessageDialog(this, "Adicione pelo menos um produto ao carrinho.", "Erro: Venda",JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btFinalizarCarrinhoActionPerformed

    private void formatTotalCarrinhoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatTotalCarrinhoVendaActionPerformed
        double total = 0.0;
        List<Item_Venda> itensVenda = (List<Item_Venda>) vendaAtual.getItemVenda(); 

        if (itensVenda != null) {
            for (Item_Venda item : itensVenda) {
                total += item.getProduto().getValor() * item.getQtProduto() * (1 - item.getDesconto());
            }
        }
        formatTotalCarrinhoVenda.setText(String.format("%.2f", total));
    }//GEN-LAST:event_formatTotalCarrinhoVendaActionPerformed

    private void cbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClienteActionPerformed
        
    }//GEN-LAST:event_cbClienteActionPerformed

    private void fieldQtEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldQtEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldQtEstoqueActionPerformed

    private void formatQtProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatQtProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatQtProdutoActionPerformed

    private void fieldNomeCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNomeCarrinhoActionPerformed
        
        
        
        
    }//GEN-LAST:event_fieldNomeCarrinhoActionPerformed

    private void btAdicionarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarCarrinhoActionPerformed
        
        
        
        
        
        
        
    }//GEN-LAST:event_btAdicionarCarrinhoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionarCarrinho;
    private javax.swing.JButton btAdicionarCliente;
    private javax.swing.JButton btAdicionarEstoque;
    private javax.swing.JButton btAdicionarProduto;
    private javax.swing.JToggleButton btBuscarCarrinho;
    private javax.swing.JButton btBuscarEstoque;
    private javax.swing.JButton btCancelarCarrinho;
    private javax.swing.JButton btCancelarCliente;
    private javax.swing.JButton btCancelarEstoque;
    private javax.swing.JButton btCancelarProduto;
    private javax.swing.JToggleButton btEncerrar;
    private javax.swing.JButton btFinalizarCarrinho;
    private javax.swing.JButton btListarCliente;
    private javax.swing.JButton btListarProduto;
    private javax.swing.JComboBox<String> cbCategoriaProduto;
    private javax.swing.JComboBox<String> cbCliente;
    private javax.swing.JComboBox<String> cbUnidadeMedidaProduto;
    private javax.swing.JTextField fieldNomeCarrinho;
    private javax.swing.JTextField fieldNomeCliente;
    private javax.swing.JTextField fieldNomeEstoque;
    private javax.swing.JTextField fieldNomeProduto;
    private javax.swing.JFormattedTextField fieldQtEstoque;
    private javax.swing.JFormattedTextField formatCpfCliente;
    private javax.swing.JFormattedTextField formatPrecoProduto;
    private javax.swing.JFormattedTextField formatQtCarrinho;
    private javax.swing.JFormattedTextField formatQtProduto;
    private javax.swing.JFormattedTextField formatTamProduto;
    private javax.swing.JFormattedTextField formatTelefoneCliente;
    private javax.swing.JFormattedTextField formatTotalCarrinhoVenda;
    private javax.swing.JLabel labAdicionarEstoque;
    private javax.swing.JLabel labCadastrarProduto;
    private javax.swing.JLabel labCadastroCliente;
    private javax.swing.JLabel labCarrinho1;
    private javax.swing.JLabel labCpfCliente;
    private javax.swing.JLabel labImagemFundo;
    private javax.swing.JLabel labNomeCarrinho;
    private javax.swing.JLabel labNomeCliente;
    private javax.swing.JLabel labNomeEstoque;
    private javax.swing.JLabel labNomeProduto;
    private javax.swing.JLabel labPrecoProduto;
    private javax.swing.JLabel labQtCarrinho;
    private javax.swing.JLabel labQtEstoque;
    private javax.swing.JLabel labQtEstoqueProduto;
    private javax.swing.JLabel labTamProduto;
    private javax.swing.JLabel labTelefoneCliente;
    private javax.swing.JLabel labTotalCarrinhoVenda;
    private javax.swing.JPanel panCadastrarProduto;
    private javax.swing.JPanel panClientes;
    private javax.swing.JPanel panControleEstoque;
    private javax.swing.JTabbedPane panProduto;
    private javax.swing.JPanel panVenda;
    private javax.swing.JScrollPane scrolpanCarrinho;
    private javax.swing.JTable tableCarrinho;
    private javax.swing.JTabbedPane tpanMenu;
    // End of variables declaration//GEN-END:variables
    
    private boolean validarCamposProduto() {
        String msgErro = "";
        
        colorBlackProduto();
          
        if(cbUnidadeMedidaProduto.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Digite Unidade de Medida válida!");
            return false;
        }
        
        if(cbCategoriaProduto.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Digite categoria válida!");
            return false;
        }
                
        if(fieldNomeProduto.getText().isEmpty()){
            msgErro = msgErro + "Adicione um nome.\n";
            labNomeProduto.setForeground(Color.red); 
        }
        
        if(formatPrecoProduto.getValue() == null){
            msgErro = msgErro + "Adicione um preço.\n";
            labPrecoProduto.setForeground(Color.red); 
        }
        
        if(formatQtProduto.getValue() == null){
            msgErro = msgErro + "Adicione um quantidade de estoque.\n";
            labQtEstoqueProduto.setForeground(Color.red); 
        }
        
        if(formatTamProduto.getValue() == null){
            msgErro = msgErro + "Adicione uma tamanho/ peso.\n";
            labTamProduto.setForeground(Color.red); 
        }
        
        if ( msgErro.isEmpty() ) {
            return true;
        } else {            
            JOptionPane.showMessageDialog(this, msgErro, "ERRO Produto", JOptionPane.ERROR_MESSAGE);
            return false;
        }        
    }
    
    private boolean validarCamposCliente() {
        String msgErro = "";
        
        colorBlackCliente();
                
        if(formatCpfCliente.getValue() == null){
            msgErro = msgErro + "Adicione um CPF.\n";
            labCpfCliente.setForeground(Color.red); 
        }
        
        if(fieldNomeCliente.getText().isEmpty()){
            msgErro = msgErro + "Adicione um nome.\n";
            labNomeCliente.setForeground(Color.red); 
        }
        
        if(formatTelefoneCliente.getValue() == null){
            msgErro = msgErro + "Adicione um celular.\n";
            labTelefoneCliente.setForeground(Color.red); 
        }
                        
        if ( msgErro.isEmpty() ) {
            return true;
        } else {            
            JOptionPane.showMessageDialog(this, msgErro, "ERRO Cliente", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean validarCamposVenda() {
        String msgErro = "";
        
        labNomeCarrinho.setForeground(Color.black);
        labQtCarrinho.setForeground(Color.black);        
        
        if(fieldNomeCarrinho.getText().isEmpty()){
            msgErro = msgErro + "Adicione um produto.\n";
            labNomeCarrinho.setForeground(Color.red);
        }
        
        if(formatQtCarrinho.getValue() == null){
            msgErro = msgErro + "Adicione uma quantidade.\n";
            labQtCarrinho.setForeground(Color.red);
        }
        
        if ( msgErro.isEmpty() ) {
            return true;
        } else {            
            JOptionPane.showMessageDialog(this, msgErro, "ERRO Venda", 
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }        
    }
    
    public boolean validarTabelaVenda(){
        if(tableCarrinho.getRowCount() == 0){
            return false;
        }  
        return true;
    }
    
    /* LAB BLACK */
    
    public void colorBlackProduto(){
        labNomeProduto.setForeground(Color.black);
        labPrecoProduto.setForeground(Color.black);
        labQtEstoqueProduto.setForeground(Color.black);
        labTamProduto.setForeground(Color.black);
    }
    
    public void colorBlackCliente(){
        labCpfCliente.setForeground(Color.black);
        labNomeCliente.setForeground(Color.black);
        labTelefoneCliente.setForeground(Color.black);
    }
        
    /* LIMPAR CAMPOS */
    
    
    public void limparCamposCliente(){
        formatCpfCliente.setText("");
        fieldNomeCliente.setText("");      
        formatTelefoneCliente.setText("");
    }
    
    public void limparCamposVenda(){
        fieldNomeCarrinho.setText("");
        formatQtCarrinho.setText("");
    }
    
    public void limparCamposProduto(){
        fieldNomeProduto.setText("");
        fieldNomeProduto.setText("");
        formatQtProduto.setText("");
        formatPrecoProduto.setText("");
        formatTamProduto.setText("");
        cbUnidadeMedidaProduto.setSelectedIndex(0);
        cbCategoriaProduto.setSelectedIndex(0);
    }
    
    public void limparTabelaVenda(){
        DefaultTableModel model = (DefaultTableModel) tableCarrinho.getModel();
        model.setRowCount(0);
    }    
    
    public void atualizarComboBoxCliente() throws ClassNotFoundException, SQLException{
        List<Cliente> clientes = GerenciadorDeInterface.getInstance().getDominio().listar(Cliente.class);        
        cbCliente.removeAllItems();
        for (Cliente cliente : clientes) {
            cbCliente.addItem(cliente.getNome() + " - " + cliente.getCpf());
        }        
    }

    private boolean validarCpfUnico(String cpf) {
        try {
            List<Object> cpfExistente = GerenciadorDeInterface.getInstance().getDominio().pesquisarCliente(cpf, 2);
            if (cpfExistente != null && !cpfExistente.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Cliente com o CPF " + cpf + " já existe.", "ERRO: Adicionar Cliente", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Dlg_Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;
    }
}